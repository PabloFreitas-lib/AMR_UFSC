<?xml version="1.0" encoding="UTF-8"?>
<launch>

	<!-- Argumentos e parametros -->

	<arg name="urdf_file" default="$(find xacro)/xacro '$(find pegasus_description)/urdf/lino_robot.urdf'"/>

	<arg name="scan_topic" default="scan"/>
	<!-- Laserscan topic -->
	<param name="/use_sim_time" value="false"/>
	<param name="robot_description" command="$(arg urdf_file)"/>

	<!-- Para uma roda de 6 polegadas de diametro e 360 pulsos por volta e uma distancia de 45cm entre as rodas-->
	<rosparam param="base_width">0.45</rosparam>
	<rosparam param="ticks_meter">752</rosparam>

	<rosparam param="cmd_vel_topic">"cmd_vel_mux/input/teleop"</rosparam>
	<!-- Tirar o comentario se for para teleoperação(teleop) -->
	<!-- <rosparam param="cmd_vel_topic">"cmd_vel_mux/input/navi"</rosparam> -->
	<!-- Tirar o comentario se for para navegação -->

	<!-- ########################################################################################################################### -->

	<!-- Nos e pacotes -->

	<!-- ########################################################################################################################### -->
	<!-- Wheel Enconders odometry -->

	<node pkg="pegasus_bringup" type="diff_tf.py" name="diff_tf" output="screen"/>
	<!--node pkg="pegasus_bringup" type="twist_to_motor" name="twist_to_motor" output="screen"/-->
	<node pkg="pegasus_bringup" type="twist_to_motors" name="twist_to_motor" output="screen"/>

	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
		<param name="publish_frequency" type="double" value="5.0"/>
	</node>
	<node pkg="joint_state_publisher" type="joint_state_publisher" name="joint_state_publisher"/>




	<node name="launchpad_node" pkg="pegasus_bringup" type="launchpad_node.py" >
		<rosparam file="$(find pegasus_bringup)/param/board_config.yaml" command="load"/>
	</node>

	<!-- pid_velocity - takes messages on wheel_vtarget target velocities for the wheels and monitors wheel for feedback -->
	<node name="lpid_velocity" pkg="pegasus_bringup" type="pid_velocity.py" output="screen">

		<remap from="wheel" to="lwheel"/>
		<remap from="motor_cmd" to="left_wheel_speed"/>
		<remap from="wheel_vtarget" to="lwheel_vtarget"/>
		<remap from="wheel_vel" to="lwheel_vel"/>
		<rosparam param="Kp">400</rosparam>
		<rosparam param="Ki">100</rosparam>
		<rosparam param="Kd">0</rosparam>
		<rosparam param="out_min">-255</rosparam>
		<rosparam param="out_max">255</rosparam>
		<rosparam param="rate">30</rosparam>
		<rosparam param="timeout_ticks">10</rosparam>
		<rosparam param="rolling_pts">5</rosparam>

	</node>

	<node name="rpid_velocity" pkg="pegasus_bringup" type="pid_velocity.py" output="screen">

		<remap from="wheel" to="rwheel"/>
		<remap from="motor_cmd" to="right_wheel_speed"/>
		<remap from="wheel_vtarget" to="rwheel_vtarget"/>
		<remap from="wheel_vel" to="rwheel_vel"/>

		<rosparam param="Kp">400</rosparam>
		<rosparam param="Ki">100</rosparam>
		<rosparam param="Kd">0</rosparam>
		<rosparam param="out_min">-255</rosparam>
		<rosparam param="out_max">255</rosparam>
		<rosparam param="rate">30</rosparam>
		<rosparam param="timeout_ticks">10</rosparam>
		<rosparam param="rolling_pts">5</rosparam>

	</node>


	<!-- Odom-IMU Extended Kalman Filter-->
	<!-- <node pkg="robot_localization" type="ekf_localization_node" name="ekf_localization">
			<remap from="odometry/filtered" to="odom" />
			<rosparam command="load" file="$(find linorobot)/param/ekf/robot_localization.yaml" />
	</node> -->

	<!-- ########################################################################################################################### -->

</launch>
