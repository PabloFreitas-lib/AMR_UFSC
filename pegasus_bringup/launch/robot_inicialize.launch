<?xml version="1.0" encoding="UTF-8"?>
<launch>

							<!-- Argumentos e parametros -->

<!-- ########################################################################################################################### -->
	<arg name="simulation" default="$(optenv TURTLEBOT_SIMULATION false)"/>
	<arg name="urdf_file" default="$(find xacro)/xacro.py '$(find chefbot_description)/urdf/chefbot_base.xacro'" />
	<arg name="scan_topic" default="scan"/>	<!-- Laserscan topic -->
	<param name="/use_sim_time" value="$(arg simulation)"/>
	<param name="robot_description" command="$(arg urdf_file)" />


	<!-- Para uma roda de 6 polegadas de diametro e 360 pulsos por volta e uma distancia de 45cm entre as rodas-->
	<rosparam param="base_width">0.45</rosparam>
	<rosparam param="ticks_meter">752</rosparam>
<!-- ########################################################################################################################### -->


							<!-- Nos e pacotes -->

<!-- ########################################################################################################################### -->

	<!-- Wheel Enconders odometry -->
	<node pkg="pegasus_navig_cpp" type="diff_tf" name="diff_tf" output="screen"/>

	<!-- C ++ -->

	<node pkg="pegasus_navig_cpp" type="twist_to_motor" name="twist_to_motor" output="screen"/>
	<!--node pkg="pegasus_navig_cpp" type="diff_tf" name="diff_tf" output="screen"/-->

	 <!-- Laser scan tf -->
	<!--node name="base_to_laser_scan" pkg="tf" type="static_transform_publisher" args="0.07 0 0 0 0 0 1 /base_link /laser 40"/-->

	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher">
		<param name="publish_frequency" type="double" value="5.0" />
	</node>

	<node name="launchpad_node" pkg="pegasus_bringup" type="launchpad_node.py">
		<rosparam file="$(find pegasus_bringup)/param/board_config.yaml" command="load" />
	</node>



	<node name="lpid_velocity" pkg="pegasus_bringup" type="pid_velocity.py" output="screen">

		<remap from="wheel" to="lwheel"/>
		<remap from="motor_cmd" to="left_wheel_speed"/>
		<remap from="wheel_vtarget" to="lwheel_vtarget"/>
		<remap from="wheel_vel" to="lwheel_vel"/>
		<rosparam param="Kp">400</rosparam>
		<rosparam param="Ki">100</rosparam>
		<rosparam param="Kd">0</rosparam>
		<rosparam param="out_min">-1023</rosparam>
		<rosparam param="out_max">1023</rosparam>
		<rosparam param="rate">30</rosparam>
		<rosparam param="timeout_ticks">10</rosparam>
		<rosparam param="rolling_pts">5</rosparam>

	</node>

	<!--
	pid_velocity - takes messages on wheel_vtarget target velocities    for the wheels and monitors wheel for feedback
	-->
	<node name="rpid_velocity" pkg="pegasus_bringup" type="pid_velocity.py" output="screen">

		<remap from="wheel" to="rwheel"/>
		<remap from="motor_cmd" to="right_wheel_speed"/>
		<remap from="wheel_vtarget" to="rwheel_vtarget"/>
		<remap from="wheel_vel" to="rwheel_vel"/>

		<rosparam param="Kp">400</rosparam>
		<rosparam param="Ki">100</rosparam>
		<rosparam param="Kd">0</rosparam>
		<rosparam param="out_min">-1023</rosparam>
		<rosparam param="out_max">1023</rosparam>
		<rosparam param="rate">30</rosparam>
		<rosparam param="timeout_ticks">10</rosparam>
		<rosparam param="rolling_pts">5</rosparam>

	</node>

<!-- ########################################################################################################################### -->

</launch>
